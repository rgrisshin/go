package main // Определяем пакет main, который является точкой входа в программу

import (
	"fmt" // Импортируем пакет fmt для форматированного ввода-вывода
)

// Функция Map, применяющая функцию к каждому элементу среза
func Map(input []float64, fn func(float64) float64) []float64 {
	// Создаем новый срез для хранения результатов
	// Длина нового среза равна длине входного среза input
	result := make([]float64, len(input))

	// Проходим по каждому элементу среза input с помощью цикла range
	for i, v := range input {
		// Применяем переданную функцию fn к текущему элементу v
		// Результат функции сохраняем в соответствующем индексе нового среза result
		result[i] = fn(v)
	}

	// Возвращаем новый срез result, содержащий результаты применения функции к каждому элементу
	return result
}

// Функция для возведения числа в квадрат
func square(x float64) float64 {
	// Возвращаем квадрат переданного числа x
	return x * x
}

func main() {
	// Создаем срез значений типа float64 и заполняем его числами
	values := []float64{1.0, 2.0, 3.0, 4.0, 5.0}
	// Выводим исходный срез на экран
	fmt.Println("Исходный срез:", values)

	// Присваиваем функцию square переменной squareFunc
	squareFunc := square

	// Применяем функцию Map к срезу values, передавая squareFunc как функцию для обработки элементов
	// Результат сохраняем в переменной squaredValues
	squaredValues := Map(values, squareFunc)
	// Выводим новый срез, содержащий квадраты исходных значений
	fmt.Println("Срез после применения функции Map:", squaredValues)
}
